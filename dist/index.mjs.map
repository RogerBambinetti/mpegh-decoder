{"version":3,"sources":["../src/index.ts","../src/error/Errors.ts"],"sourcesContent":["import { execFile } from 'node:child_process';\r\nimport { promisify } from 'node:util';\r\nimport { PlatformNotSupported } from './error/Errors';\r\n\r\nconst execFilePromise = promisify(execFile);\r\n\r\nconst paths: { [key: string]: string } = {\r\n    'win32': './src/mpeghdecoder/mpeghDecoder.exe'\r\n};\r\n\r\ninterface IO {\r\n    input: string;\r\n    output: string;\r\n}\r\n\r\ninterface Options {\r\n    cicp?: string;\r\n}\r\n\r\nconst mpeghdecode = {\r\n    decode: async (IO: IO, options?: Options): Promise<string> => {\r\n        try {\r\n\r\n            if (!paths[process.platform]) {\r\n                throw new PlatformNotSupported();\r\n            }\r\n\r\n            const args = ['-if', IO.input, '-of', IO.output];\r\n\r\n            if (options?.cicp) {\r\n                args.push('-tl');\r\n                args.push(options.cicp);\r\n            }\r\n\r\n            const { stdout } = await execFilePromise(paths[process.platform], args);\r\n\r\n            return stdout;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n    bulkDecode: async (IO: IO[], options?: Options): Promise<string[]> => {\r\n        const promises: Promise<string>[] = IO.map(io => mpeghdecode.decode(io, options));\r\n        return await Promise.all(promises);\r\n    }\r\n};\r\n\r\nexport default mpeghdecode;","export class PlatformNotSupported extends Error {\r\n    constructor() {\r\n        super('Platform not supported');\r\n    }\r\n}\r\n\r\nexport class InvalidOption extends Error {\r\n    constructor() {\r\n        super('Invalid option');\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;;;ACDnB,IAAM,uBAAN,cAAmC,MAAM;AAAA,EAC5C,cAAc;AACV,UAAM,wBAAwB;AAAA,EAClC;AACJ;;;ADAA,IAAM,kBAAkB,UAAU,QAAQ;AAE1C,IAAM,QAAmC;AAAA,EACrC,SAAS;AACb;AAWA,IAAM,cAAc;AAAA,EAChB,QAAQ,CAAO,IAAQ,YAAuC;AAC1D,QAAI;AAEA,UAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC1B,cAAM,IAAI,qBAAqB;AAAA,MACnC;AAEA,YAAM,OAAO,CAAC,OAAO,GAAG,OAAO,OAAO,GAAG,MAAM;AAE/C,UAAI,mCAAS,MAAM;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,QAAQ,IAAI;AAAA,MAC1B;AAEA,YAAM,EAAE,OAAO,IAAI,MAAM,gBAAgB,MAAM,QAAQ,QAAQ,GAAG,IAAI;AAEtE,aAAO;AAAA,IACX,SAAS,OAAO;AACZ,YAAM;AAAA,IACV;AAAA,EACJ;AAAA,EACA,YAAY,CAAO,IAAU,YAAyC;AAClE,UAAM,WAA8B,GAAG,IAAI,QAAM,YAAY,OAAO,IAAI,OAAO,CAAC;AAChF,WAAO,MAAM,QAAQ,IAAI,QAAQ;AAAA,EACrC;AACJ;AAEA,IAAO,gBAAQ;","names":[]}